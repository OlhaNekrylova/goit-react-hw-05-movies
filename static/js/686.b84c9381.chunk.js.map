{"version":3,"file":"static/js/686.b84c9381.chunk.js","mappings":"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","sources":["shared/components/MoviesSearchList/MoviesSearchList.module.css","shared/components/MoviesSearchList/MoviesSearchList.jsx","shared/hooks/useForm.js","modules/initialState.js","modules/MoviesSearchForm/MoviesSearchForm.module.css","modules/MoviesSearchForm/MoviesSearchForm.jsx","modules/MoviesSearch/MoviesSearch.module.css","modules/MoviesSearch/MoviesSearch.jsx","pages/Movies/Movies.jsx","shared/services/movies-api.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultMovieImg from '../../../images/placeholder.jpg';\nimport styles from './MoviesSearchList.module.css';\n\nconst MoviesSearchList = ({ items }) => {\n\n    const location = useLocation();\n\n    const elements = items.map(({ movieId, title, poster_path }) =>\n        <Link className={styles.link} \n            key={movieId} to={`/movies/${movieId}`} \n            state={{from: location}}>\n            <li className={styles.item}>\n                <img\n                    src={\n                    poster_path\n                    ? `https://image.tmdb.org/t/p/original/${poster_path}`\n                    : defaultMovieImg\n                    }\n                    alt={title}\n                    className={styles.movieImg}\n                    />\n                <p className={styles.movieTitle}>{title}</p>\n            </li>\n        </Link>);\n\n    return (\n        <ul className={styles.list}>\n            {elements}\n        </ul>\n    )\n}\n\nexport default memo(MoviesSearchList);\n\nMoviesSearchList.defaultProps = {\n    items: []\n}","import { useState, useCallback } from 'react';\n\nconst useForm = ({initialState, onSubmit})=> {\n    const [state, setState] = useState({...initialState})\n\n    const handleChange = useCallback(({target}) => {\n        const {name, value} = target;\n        setState(prevState => {\n            return {...prevState, [name]: value}\n        })\n    }, [setState]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;\n","const initialState = {\n    search: \"\"\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {};","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport useForm from '../../shared/hooks/useForm';\nimport initialState from '../../modules/initialState';\nimport styles from './MoviesSearchForm.module.css';\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n    const {search} = state;\n\n    return (\n        <form className={styles.form} onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"\">Search movies</label>\n                <input value={search} onChange={handleChange} name=\"search\" placeholder=\"Search\" required />\n            </div>\n        </form>\n    )\n}\n\nexport default memo(MoviesSearchForm);\n\nMoviesSearchForm.defaultProps = {\n    initialState: {\n        search: \"\"\n    }\n}\n\nMoviesSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect, useCallback } from 'react';\nimport {useSearchParams} from 'react-router-dom';\nimport { getSearchMovies } from '../../shared/services/movies-api';\nimport MoviesSearchList from '../../shared/components/MoviesSearchList/MoviesSearchList';\nimport MoviesSearchForm from '../MoviesSearchForm/MoviesSearchForm';\nimport styles from './MoviesSearch.module.css';\n\nconst MoviesSearch = () => {\n    const [items, setItems] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get('search');\n    const page = searchParams.get('page');\n    \n    useEffect(() => {\n        if (!search) {\n            return;\n        }\n\n        const fetchMovies = async () => {\n            try {\n                setLoading(true);\n                const {results} = await getSearchMovies(search, page);\n                setItems(prevItems => ([...prevItems, ...results]));\n            }\n            catch (error) {\n                setError(error.message);\n            }\n            finally {\n                setLoading(false);\n            }\n        }\n        fetchMovies();\n\n    }, [search, page, setLoading, setItems, setError])\n\n    const onSearchMovies = useCallback(({ search }) => {\n        setSearchParams({search, page: 1});\n        setItems([]);\n    }, [setSearchParams]);\n\n\n    const loadMore = useCallback(() => {\n        setSearchParams({search, page: Number(page) + 1});\n    }, [search, page, setSearchParams]);\n\n    return (\n        <>\n            <MoviesSearchForm initialState={{search}} onSubmit={onSearchMovies} />\n            <MoviesSearchList items={items} />\n            {error && <p className={styles.errorMessage}>{error}</p>}\n            {loading && <p>...Load movies</p>}\n            {Boolean(items.length) && <button onClick={loadMore}>Load more</button>}\n        </>\n    )\n}\n\nexport default MoviesSearch;","import MovieSearch from '../../modules/MoviesSearch/MoviesSearch';\n\nconst MovieSearchPage = ()=> {\n    return (\n        <div className=\"container\">\n            <MovieSearch />\n        </div>\n    ) \n}\n\nexport default MovieSearchPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    BASE_URL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: '682f4219ed4d8b2eaabdbacd40ee2053',\n        language: 'en-US',\n    },\n});\n\nexport const getPopularMovies = async()=> {\n    const url = '/trending/movie/day';\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getSearchMovies = async(query, page )=> {\n    const url = '/search/movie';\n    const {data} = await instance.get(url, {\n        params: {query, page },\n    });\n    return data;\n}\n\nexport const getMovieById = async(movieId)=> {\n    const url = `/movie/${movieId}`;\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getCastByMovieId  = async(movieId)=> {\n    const url = `/movie/${movieId}/credits`;\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getReviewsByMovieId  = async(movieId)=> {\n    const url = `/movie/${movieId}/reviews`;\n    const {data} = await instance.get(url);\n    return data;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["MoviesSearchList","items","location","useLocation","elements","map","movieId","title","poster_path","className","styles","to","state","from","src","defaultMovieImg","alt","memo","defaultProps","initialState","onSubmit","useState","setState","handleChange","useCallback","target","name","value","prevState","handleSubmit","e","preventDefault","search","MoviesSearchForm","useForm","htmlFor","onChange","placeholder","required","setItems","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","page","useEffect","fetchMovies","getSearchMovies","results","prevItems","message","onSearchMovies","loadMore","Number","Boolean","length","onClick","instance","axios","BASE_URL","params","api_key","language","getPopularMovies","data","query","getMovieById","url","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}