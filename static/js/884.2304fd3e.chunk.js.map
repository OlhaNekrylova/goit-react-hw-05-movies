{"version":3,"file":"static/js/884.2304fd3e.chunk.js","mappings":"gRACA,GAAgB,KAAO,+BAA+B,UAAY,oCAAoC,SAAW,mCAAmC,WAAa,sC,SCI3JA,EAAmB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAElBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAMI,KAAI,WAAkCC,GAAlC,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,YAAnB,OAC3B,eAAIC,UAAWC,EAAAA,KAAf,UACA,UAAC,KAAD,CAAMD,UAAWC,EAAAA,UACbC,MAAO,CAACC,KAAMX,GACdY,GAAE,kBAAaP,GAFnB,WAGY,gBACIQ,IACAN,EAAW,8CAC8BA,GACvCO,EAEFC,IAAKT,EACLE,UAAWC,EAAAA,YAEf,cAAGD,UAAWC,EAAAA,WAAd,SAAkCH,QAbbF,EADN,IAkB3B,OACI,eAAII,UAAWC,EAAAA,KAAf,SACKP,GAGZ,EAED,GAAec,EAAAA,EAAAA,MAAKlB,GClCL,SAASmB,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,CACT,CCXA,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,UACtD,KAAKM,EAAKM,KAAKC,MAAMP,EAAME,EAC7B,CAEA,OAAOF,CACT,CAEe,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIb,EAAQL,OAAOqB,IAAS,GAAIC,SAAQ,SAAUxB,GACpD,EAAemB,EAAQnB,EAAKuB,EAAOvB,GACrC,IAAKE,OAAOuB,0BAA4BvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAAWhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GAC5JE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,GAC7E,GACF,CAEA,OAAOmB,CACT,CFUAxC,EAAiBgD,aAAe,CAC5B/C,MAAO,IGnCX,IAmBA,EAnBgB,SAAC,GAA6B,IAA5BgD,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,SAC5B,GAA0BC,EAAAA,EAAAA,UAAS,KAAIF,IAAvC,eAAOrC,EAAP,KAAcwC,EAAd,KAEMC,GAAeC,EAAAA,EAAAA,cAAY,YAAe,IAAbd,EAAY,EAAZA,OACxBe,EAAef,EAAfe,KAAMjC,EAASkB,EAATlB,MACb8B,GAAS,SAAAI,GACL,OAAO,OAAIA,GAAX,QAAuBD,EAAOjC,GACjC,GACJ,GAAE,CAAC8B,IAQJ,MAAO,CAACxC,MAAAA,EAAOwC,SAAAA,EAAUC,aAAAA,EAAcI,aANlB,SAAAC,GACjBA,EAAEC,iBACFT,EAAS,KAAItC,IACbwC,EAAS,KAAIH,GAChB,EAGJ,ECfD,EAJqB,CACjBW,OAAQ,ICAZ,GAAiB,ECKXC,EAAmB,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SACxB,EAA4CY,EAAQ,CAACb,aAAAA,EAAcC,SAAAA,IAA5DtC,EAAP,EAAOA,MAAOyC,EAAd,EAAcA,aAAcI,EAA5B,EAA4BA,aACrBG,EAAUhD,EAAVgD,OAEP,OACI,iBAAMlD,UAAWC,EAAAA,KAAauC,SAAUO,EAAxC,UACI,4BACI,kBAAOM,QAAQ,GAAf,4BACA,kBAAOzC,MAAOsC,EAAQI,SAAUX,EAAcE,KAAK,SAASU,YAAY,SAASC,UAAQ,QAIxG,EAED,GAAehD,EAAAA,EAAAA,MAAK2C,GAEpBA,EAAiBb,aAAe,CAC5BC,aAAc,CACVW,OAAQ,KCvBhB,OAAiB,EC0DjB,EApDqB,WACjB,OAA0BT,EAAAA,EAAAA,UAAS,IAAnC,eAAOlD,EAAP,KAAckE,EAAd,KACA,GAA8BhB,EAAAA,EAAAA,WAAS,GAAvC,eAAOiB,EAAP,KAAgBC,EAAhB,KACA,GAA0BlB,EAAAA,EAAAA,UAAS,MAAnC,eAAOmB,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMd,EAASa,EAAaE,IAAI,UAC1BC,EAAOH,EAAaE,IAAI,SAE9BE,EAAAA,EAAAA,YAAU,WACN,GAAKjB,EAAL,CAIA,IAAMkB,EAAW,mCAAG,sGAEZT,GAAW,GAFC,UAGYU,EAAAA,EAAAA,IAAgBnB,EAAQgB,GAHpC,gBAGLI,EAHK,EAGLA,QACPb,GAAS,SAAAc,GAAS,wBAASA,IAAT,OAAuBD,GAAvB,IAJN,gDAOZT,EAAS,KAAMW,SAPH,yBAUZb,GAAW,GAVC,4EAAH,qDAajBS,GAfC,CAiBJ,GAAE,CAAClB,EAAQgB,EAAMP,EAAYF,EAAUI,IAExC,IAAMY,GAAiB7B,EAAAA,EAAAA,cAAY,YAAiB,IAAdM,EAAa,EAAbA,OAClCc,EAAgB,CAACd,OAAAA,EAAQgB,KAAM,IAC/BT,EAAS,GACZ,GAAE,CAACO,IAGEU,GAAW9B,EAAAA,EAAAA,cAAY,WACzBoB,EAAgB,CAACd,OAAAA,EAAQgB,KAAMS,OAAOT,GAAQ,GACjD,GAAE,CAAChB,EAAQgB,EAAMF,IAElB,OACI,iCACI,SAAC,EAAD,CAAkBzB,aAAc,CAACW,OAAAA,GAASV,SAAUiC,KACpD,SAAC,EAAD,CAAkBlF,MAAOA,IACxBqE,IAAS,cAAG5D,UAAWC,EAAAA,aAAd,SAAoC2D,IAC7CF,IAAW,0CACXkB,QAAQrF,EAAM0C,UAAW,mBAAQ4C,QAASH,EAAjB,yBAGrC,EC/CD,EARwB,WACpB,OACI,gBAAK1E,UAAU,YAAf,UACI,SAAC,EAAD,KAGX,C,sICNK8E,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAILC,EAAgB,mCAAG,4FAChB,sBADgB,SAEPN,EAASb,IADlB,uBADgB,uBAErBoB,EAFqB,EAErBA,KAFqB,kBAGrBA,GAHqB,2CAAH,qDAMhBhB,EAAe,mCAAG,WAAMiB,EAAOpB,GAAb,+EACf,gBADe,SAENY,EAASb,IADlB,gBAC2B,CACnCgB,OAAQ,CAACK,MAAAA,EAAOpB,KAAAA,KAHO,uBAEpBmB,EAFoB,EAEpBA,KAFoB,kBAKpBA,GALoB,2CAAH,wDAQfE,EAAY,mCAAG,WAAM1F,GAAN,kFAClB2F,EADkB,iBACF3F,GADE,SAEHiF,EAASb,IAAIuB,GAFV,uBAEjBH,EAFiB,EAEjBA,KAFiB,kBAGjBA,GAHiB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/shared/components/MoviesSearchList/MoviesSearchList.module.css?872d","shared/components/MoviesSearchList/MoviesSearchList.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","shared/hooks/useForm.js","modules/initialState.js","modules/MoviesSearchForm/MoviesSearchForm.module.css","modules/MoviesSearchForm/MoviesSearchForm.jsx","modules/MoviesSearch/MoviesSearch.module.css","modules/MoviesSearch/MoviesSearch.jsx","pages/Movies/Movies.jsx","shared/services/movies-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesSearchList_list__9ZVMD\",\"movieLink\":\"MoviesSearchList_movieLink__lnMUU\",\"movieImg\":\"MoviesSearchList_movieImg__YEWcc\",\"movieTitle\":\"MoviesSearchList_movieTitle__7XDOJ\"};","import { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultMovieImg from '../../../images/placeholder.jpg';\nimport styles from './MoviesSearchList.module.css';\n\nconst MoviesSearchList = ({ items }) => {\n\n    const location = useLocation();\n\n    const elements = items.map(({ movieId, title, poster_path }, idx) =>\n    <li className={styles.item} key={idx}>\n    <Link className={styles.movieLink} \n        state={{from: location}}\n        to={`/movies/${movieId}`}>\n                <img\n                    src={\n                    poster_path\n                    ? `https://image.tmdb.org/t/p/original/${poster_path}`\n                    : defaultMovieImg\n                    }\n                    alt={title}\n                    className={styles.movieImg}\n                    />\n                <p className={styles.movieTitle}>{title}</p>\n                </Link>\n        </li> );\n\n    return (\n        <ul className={styles.list}>\n            {elements}\n        </ul>\n    )\n}\n\nexport default memo(MoviesSearchList);\n\nMoviesSearchList.defaultProps = {\n    items: []\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { useState, useCallback } from 'react';\n\nconst useForm = ({initialState, onSubmit})=> {\n    const [state, setState] = useState({...initialState})\n\n    const handleChange = useCallback(({target}) => {\n        const {name, value} = target;\n        setState(prevState => {\n            return {...prevState, [name]: value}\n        })\n    }, [setState]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;\n","const initialState = {\n    search: \"\"\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {};","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport useForm from '../../shared/hooks/useForm';\nimport initialState from '../../modules/initialState';\nimport styles from './MoviesSearchForm.module.css';\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n    const {search} = state;\n\n    return (\n        <form className={styles.form} onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"\">Search movies</label>\n                <input value={search} onChange={handleChange} name=\"search\" placeholder=\"Search\" required />\n            </div>\n        </form>\n    )\n}\n\nexport default memo(MoviesSearchForm);\n\nMoviesSearchForm.defaultProps = {\n    initialState: {\n        search: \"\"\n    }\n}\n\nMoviesSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect, useCallback } from 'react';\nimport {useSearchParams} from 'react-router-dom';\nimport { getSearchMovies } from '../../shared/services/movies-api';\nimport MoviesSearchList from '../../shared/components/MoviesSearchList/MoviesSearchList';\nimport MoviesSearchForm from '../MoviesSearchForm/MoviesSearchForm';\nimport styles from './MoviesSearch.module.css';\n\nconst MoviesSearch = () => {\n    const [items, setItems] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const search = searchParams.get('search');\n    const page = searchParams.get('page');\n    \n    useEffect(() => {\n        if (!search) {\n            return;\n        }\n\n        const fetchMovies = async () => {\n            try {\n                setLoading(true);\n                const {results} = await getSearchMovies(search, page);\n                setItems(prevItems => ([...prevItems, ...results]));\n            }\n            catch (error) {\n                setError(error.message);\n            }\n            finally {\n                setLoading(false);\n            }\n        }\n        fetchMovies();\n\n    }, [search, page, setLoading, setItems, setError])\n\n    const onSearchMovies = useCallback(({ search }) => {\n        setSearchParams({search, page: 1});\n        setItems([]);\n    }, [setSearchParams]);\n\n\n    const loadMore = useCallback(() => {\n        setSearchParams({search, page: Number(page) + 1});\n    }, [search, page, setSearchParams]);\n\n    return (\n        <>\n            <MoviesSearchForm initialState={{search}} onSubmit={onSearchMovies} />\n            <MoviesSearchList items={items} />\n            {error && <p className={styles.errorMessage}>{error}</p>}\n            {loading && <p>...Load movies</p>}\n            {Boolean(items.length) && <button onClick={loadMore}>Load more</button>}\n        </>\n    )\n}\n\nexport default MoviesSearch;","import MovieSearch from '../../modules/MoviesSearch/MoviesSearch';\n\nconst MovieSearchPage = ()=> {\n    return (\n        <div className=\"container\">\n            <MovieSearch />\n        </div>\n    ) \n}\n\nexport default MovieSearchPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: '682f4219ed4d8b2eaabdbacd40ee2053',\n        language: 'en-US',\n    },\n});\n\nexport const getPopularMovies = async()=> {\n    const url = '/trending/movie/day';\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getSearchMovies = async(query, page )=> {\n    const url = '/search/movie';\n    const {data} = await instance.get(url, {\n        params: {query, page },\n    });\n    return data;\n}\n\nexport const getMovieById = async(movieId)=> {\n    const url = `/movie/${movieId}`;\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getCastByMovieId  = async(movieId)=> {\n    const url = `/movie/${movieId}/credits`;\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getReviewsByMovieId  = async(movieId)=> {\n    const url = `/movie/${movieId}/reviews`;\n    const {data} = await instance.get(url);\n    return data;\n}"],"names":["MoviesSearchList","items","location","useLocation","elements","map","idx","movieId","title","poster_path","className","styles","state","from","to","src","defaultMovieImg","alt","memo","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","defaultProps","initialState","onSubmit","useState","setState","handleChange","useCallback","name","prevState","handleSubmit","e","preventDefault","search","MoviesSearchForm","useForm","htmlFor","onChange","placeholder","required","setItems","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","page","useEffect","fetchMovies","getSearchMovies","results","prevItems","message","onSearchMovies","loadMore","Number","Boolean","onClick","instance","axios","baseURL","params","api_key","language","getPopularMovies","data","query","getMovieById","url"],"sourceRoot":""}