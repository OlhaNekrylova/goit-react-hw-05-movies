{"version":3,"file":"static/js/293.a9411542.chunk.js","mappings":"iRACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA2E,mBAA3E,EAA0G,wB,SC+D1G,EAzDa,WACT,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACOC,GAAMC,EAAAA,EAAAA,MAAND,IAEPE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,2FACdN,GAAW,GADG,mBAGaO,EAAAA,EAAAA,IAAiBJ,GAH9B,OAGJK,EAHI,OAIVV,GAAQ,OAAIU,EAASX,OAJX,gDAOVK,EAAS,KAAMO,SAPL,yBASVT,GAAW,GATD,4EAAH,qDAafM,GACH,GAAE,CAACH,IAGJ,IAAMO,EAAWb,EAAKc,KAAI,YAA2C,IAAzCR,EAAwC,EAAxCA,GAAIS,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC9CC,EAAM,8CAA0CH,GACtD,OACI,gBAAII,UAAWC,EAAf,WACA,gBACIC,IAAKN,EAAeG,EAASI,EAC7BC,IAAKP,EACLQ,MAAM,MACNC,OAAO,SAEX,cAAGN,UAAWC,EAAd,SAA4BJ,KAC5B,eAAGG,UAAWC,EAAd,iBACO,uBAAIH,SATsBX,EAaxC,IAEG,OACI,gCACKJ,IACG,SAAC,KAAD,IAEHE,IAAS,mEACTJ,IACG,eAAImB,UAAWC,EAAf,SACKP,MAKpB,C,sLC5DKa,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAILC,EAAgB,mCAAG,4FAChB,sBADgB,SAEPN,EAASO,IADlB,uBADgB,uBAErBC,EAFqB,EAErBA,KAFqB,kBAGrBA,GAHqB,2CAAH,qDAMhBC,EAAe,mCAAG,WAAMC,EAAOC,GAAb,+EACf,gBADe,SAENX,EAASO,IADlB,gBAC2B,CACnCJ,OAAQ,CAACO,MAAAA,EAAOC,KAAAA,KAHO,uBAEpBH,EAFoB,EAEpBA,KAFoB,kBAKpBA,GALoB,2CAAH,wDAQfI,EAAY,mCAAG,WAAMC,GAAN,kFAClBC,EADkB,iBACFD,GADE,SAEHb,EAASO,IAAIO,GAFV,uBAEjBN,EAFiB,EAEjBA,KAFiB,kBAGjBA,GAHiB,2CAAH,sDAMZxB,EAAgB,mCAAI,WAAM6B,GAAN,kFACvBC,EADuB,iBACPD,EADO,qBAERb,EAASO,IAAIO,GAFL,uBAEtBN,EAFsB,EAEtBA,KAFsB,kBAGtBA,GAHsB,2CAAJ,sDAMhBO,EAAmB,mCAAI,WAAMF,GAAN,kFAC1BC,EAD0B,iBACVD,EADU,qBAEXb,EAASO,IAAIO,GAFF,uBAEzBN,EAFyB,EAEzBA,KAFyB,kBAGzBA,GAHyB,2CAAJ,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast123/Cast.module.css?0a8c","pages/Cast123/Cast123.jsx","shared/services/movies-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__CwfoN\",\"item\":\"Cast_item__IhoKM\",\"name\":\"Cast_name__rMASy\",\"character\":\"Cast_character__bRhp9\"};","import {useState, useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RevolvingDot } from 'react-loader-spinner';\nimport { getCastByMovieId } from '../../shared/services/movies-api';\nimport defaultMovieImg from '../../images/placeholder.jpg';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const {id} = useParams();\n\n    useEffect(()=> {\n        const fetchCast = async() => {\n            setLoading(true);\n            try {\n                const response = await getCastByMovieId(id);\n                setCast([...response.cast]);\n            }\n            catch(error) {\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        fetchCast();\n    }, [id]);\n\n\n    const elements = cast.map(({id, profile_path, name, character }) => {\n    const avatar = `https://image.tmdb.org/t/p/original/${profile_path}`;\n    return (\n        <li className={styles.item} key={id}>\n        <img\n            src={profile_path ? avatar : defaultMovieImg}\n            alt={name}\n            width=\"150\"\n            height=\"225\"\n        />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.character}>\n            as <b>{character}</b>\n        </p>\n    </li>\n    );\n});    \n\n    return (\n        <>\n            {loading && (\n                <RevolvingDot />\n            )}\n            {error && <p>Something goes wrong. Please try again.</p>}\n            {cast && (\n                <ul className={styles.list}>\n                    {elements}\n                </ul>\n            )}\n        </>\n    );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: '682f4219ed4d8b2eaabdbacd40ee2053',\n        language: 'en-US',\n    },\n});\n\nexport const getPopularMovies = async()=> {\n    const url = '/trending/movie/day';\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getSearchMovies = async(query, page )=> {\n    const url = '/search/movie';\n    const {data} = await instance.get(url, {\n        params: {query, page },\n    });\n    return data;\n}\n\nexport const getMovieById = async(movie_id)=> {\n    const url = `/movie/${movie_id}`;\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getCastByMovieId  = async(movie_id)=> {\n    const url = `/movie/${movie_id}/credits`;\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getReviewsByMovieId  = async(movie_id)=> {\n    const url = `/movie/${movie_id}/reviews`;\n    const {data} = await instance.get(url);\n    return data;\n}"],"names":["useState","cast","setCast","loading","setLoading","error","setError","id","useParams","useEffect","fetchCast","getCastByMovieId","response","message","elements","map","profile_path","name","character","avatar","className","styles","src","defaultMovieImg","alt","width","height","instance","axios","baseURL","params","api_key","language","getPopularMovies","get","data","getSearchMovies","query","page","getMovieById","movie_id","url","getReviewsByMovieId"],"sourceRoot":""}