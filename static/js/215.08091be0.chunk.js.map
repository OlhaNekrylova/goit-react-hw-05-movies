{"version":3,"file":"static/js/215.08091be0.chunk.js","mappings":"yRACA,GAAiB,E,SCIXA,EAAoB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEnBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,YAAnB,OACvB,SAAC,KAAD,CAAMC,UAAWC,EAAAA,KACCC,GAAE,kBAAaL,GAC7BM,MAAO,CAACC,KAAMX,GAFlB,UAGI,gBAAIO,UAAWC,EAAAA,KAAf,WACI,gBACII,IACAN,EAAW,8CAC8BA,GACvCO,EAEFC,IAAKT,EACLE,UAAWC,EAAAA,YAEf,cAAGD,UAAWC,EAAAA,WAAd,SAAkCH,QAZjCD,EAFc,IAkB3B,OACI,eAAIG,UAAWC,EAAAA,KAAf,SACKN,GAGZ,EAED,GAAea,EAAAA,EAAAA,MAAKjB,GAEpBA,EAAkBkB,aAAe,CAC7BjB,MAAO,IC/BX,IAkCA,EAlCsB,WAClB,OAA0BkB,EAAAA,EAAAA,UAAS,IAAnC,eAAOlB,EAAP,KAAcmB,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,oGAEZJ,GAAW,GAFC,UAGOK,EAAAA,EAAAA,MAHP,OAGNC,EAHM,OAIZR,GAAS,SAAAS,GAAS,wBAASA,IAAT,OAAuBD,GAAvB,IAJN,gDAOZJ,EAAS,KAAMM,SAPH,yBAUZR,GAAW,GAVC,4EAAH,qDAajBI,GAEH,GAAE,KAGC,gCACKL,IACG,SAAC,KAAD,IAEHE,IAAS,oEACV,SAAC,EAAD,CAAmBtB,MAAOA,MAGrC,EC3BD,EATiB,WACb,OACI,iBAAKQ,UAAU,YAAf,WACI,4CACA,SAAC,EAAD,MAGX,C,sICPKsB,E,OAAWC,EAAAA,OAAa,CAC1BC,SAAU,+BACVC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAILT,EAAgB,mCAAG,4FAChB,oBADgB,SAEPI,EAASM,IADlB,qBADgB,uBAErBT,EAFqB,EAErBA,KAFqB,kBAGrBA,GAHqB,2CAAH,qDAMhBU,EAAe,mCAAG,WAAMC,EAAOC,GAAb,+EACf,gBADe,SAENT,EAASM,IADlB,gBAC2B,CACnCH,OAAQ,CAACK,MAAAA,EAAOC,KAAAA,KAHO,uBAEpBZ,EAFoB,EAEpBA,KAFoB,kBAKpBA,GALoB,2CAAH,wDAQfa,EAAY,mCAAG,WAAMnC,GAAN,kFAClBoC,EADkB,iBACFpC,GADE,SAEHyB,EAASM,IAAIK,GAFV,uBAEjBd,EAFiB,EAEjBA,KAFiB,kBAGjBA,GAHiB,2CAAH,qD","sources":["shared/components/PopularMoviesList/PopularMoviesList.module.css","shared/components/PopularMoviesList/PopularMoviesList.jsx","modules/PopularMovies/PopularMovies.jsx","pages/Home/Home.jsx","shared/services/movies-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultMovieImg from '../../../images/placeholder.jpg';\nimport styles from './PopularMoviesList.module.css';\n\nconst PopularMoviesList = ({ items }) => {\n\n    const location = useLocation();\n\n    const elements = items.map(({ movieId, title, poster_path }) =>\n        <Link className={styles.link} \n            key={movieId} to={`/movies/${movieId}`} \n            state={{from: location}}>\n            <li className={styles.item}>\n                <img\n                    src={\n                    poster_path\n                    ? `https://image.tmdb.org/t/p/original/${poster_path}`\n                    : defaultMovieImg\n                    }\n                    alt={title}\n                    className={styles.movieImg}\n                    />\n                <p className={styles.movieTitle}>{title}</p>\n            </li>\n        </Link>);\n\n    return (\n        <ul className={styles.list}>\n            {elements}\n        </ul>\n    )\n}\n\nexport default memo(PopularMoviesList);\n\nPopularMoviesList.defaultProps = {\n    items: []\n}","import { useState, useEffect } from 'react';\nimport { RevolvingDot } from 'react-loader-spinner';\nimport { getPopularMovies } from '../../shared/services/movies-api';\nimport PopularMoviesList from '../../shared/components/PopularMoviesList/PopularMoviesList';\n// import styles from '../PopularMovies/PopularMovies.module.css';\n\nconst PopularMovies = () => {\n    const [items, setItems] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                setLoading(true);\n                const data = await getPopularMovies();\n                setItems(prevItems => ([...prevItems, ...data]));\n            }\n            catch (error) {\n                setError(error.message);\n            }\n            finally {\n                setLoading(false);\n            }\n        }\n        fetchMovies();\n\n    }, []);\n\n    return (\n        <>\n            {loading && (\n                <RevolvingDot />\n            )}\n            {error && <p>Something goes wrong. Please try again.</p>}\n            <PopularMoviesList items={items} />\n        </>\n    )\n}\n\nexport default PopularMovies;","import PopularMovies from '../../modules/PopularMovies/PopularMovies';\n\nconst HomePage = ()=> {\n    return (\n        <div className=\"container\">\n            <h1>Trending today</h1>\n            <PopularMovies />\n        </div>\n    )\n}\n\nexport default HomePage;","import axios from 'axios';\n\nconst instance = axios.create({\n    BASE_URL: 'https://api.themoviedb.org/3',\n    params: {\n        API_KEY: '682f4219ed4d8b2eaabdbacd40ee2053',\n        language: 'en-US',\n    },\n});\n\nexport const getPopularMovies = async()=> {\n    const url = '/trending/all/day';\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getSearchMovies = async(query, page )=> {\n    const url = '/search/movie';\n    const {data} = await instance.get(url, {\n        params: {query, page },\n    });\n    return data;\n}\n\nexport const getMovieById = async(movieId)=> {\n    const url = `/movie/${movieId}`;\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getCastByMovieId  = async(movieId)=> {\n    const url = `/movie/${movieId}/credits`;\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getReviewsByMovieId  = async(movieId)=> {\n    const url = `/movie/${movieId}/reviews`;\n    const {data} = await instance.get(url);\n    return data;\n}"],"names":["PopularMoviesList","items","location","useLocation","elements","map","movieId","title","poster_path","className","styles","to","state","from","src","defaultMovieImg","alt","memo","defaultProps","useState","setItems","loading","setLoading","error","setError","useEffect","fetchMovies","getPopularMovies","data","prevItems","message","instance","axios","BASE_URL","params","API_KEY","language","get","getSearchMovies","query","page","getMovieById","url"],"sourceRoot":""}