{"version":3,"file":"static/js/866.b8d99e04.chunk.js","mappings":"wQACA,GAAgB,KAAO,sBAAsB,OAAS,wBAAwB,QAAU,0B,SCwDxF,EAlDgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACOC,GAAMC,EAAAA,EAAAA,MAAND,IAEPE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,6FACjBN,GAAW,GADM,mBAGaO,EAAAA,EAAAA,IAAoBJ,GAHjC,gBAGLK,EAHK,EAGLA,QACRV,GAAW,OAAIU,IAJF,gDAObN,EAAS,KAAMO,SAPF,yBASbT,GAAW,GATE,4EAAH,qDAalBM,GACH,GAAE,CAACH,IAGJ,IAAMO,EAAWb,EAAQc,KAAI,gBAAER,EAAF,EAAEA,GAAIS,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACzB,gBAAIC,UAAWC,EAAAA,QAAf,WACI,eAAGD,UAAWC,EAAAA,OAAd,sBACQ,uBAAIH,QAEZ,cAAGE,UAAWC,EAAAA,QAAd,SAA+BF,MAJCV,EADX,IAQ7B,OACI,gCACKJ,IACG,SAAC,KAAD,IAEHE,IAAS,mEACTJ,GAAWA,EAAQmB,OAAS,GACzB,eAAIF,UAAWC,EAAAA,KAAf,SACKL,KAGL,sEAKf,C,sLCrDKO,E,OAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAILC,EAAgB,mCAAG,4FAChB,sBADgB,SAEPN,EAASO,IADlB,uBADgB,uBAErBC,EAFqB,EAErBA,KAFqB,kBAGrBA,GAHqB,2CAAH,qDAMhBC,EAAe,mCAAG,WAAMC,EAAOC,GAAb,+EACf,gBADe,SAENX,EAASO,IADlB,gBAC2B,CACnCJ,OAAQ,CAACO,MAAAA,EAAOC,KAAAA,KAHO,uBAEpBH,EAFoB,EAEpBA,KAFoB,kBAKpBA,GALoB,2CAAH,wDAQfI,EAAY,mCAAG,WAAMC,GAAN,kFAClBC,EADkB,iBACFD,GADE,SAEHb,EAASO,IAAIO,GAFV,uBAEjBN,EAFiB,EAEjBA,KAFiB,kBAGjBA,GAHiB,2CAAH,sDAMZO,EAAgB,mCAAI,WAAMF,GAAN,kFACvBC,EADuB,iBACPD,EADO,qBAERb,EAASO,IAAIO,GAFL,uBAEtBN,EAFsB,EAEtBA,KAFsB,kBAGtBA,GAHsB,2CAAJ,sDAMhBlB,EAAmB,mCAAI,WAAMuB,GAAN,kFAC1BC,EAD0B,iBACVD,EADU,qBAEXb,EAASO,IAAIO,GAFF,uBAEzBN,EAFyB,EAEzBA,KAFyB,kBAGzBA,GAHyB,2CAAJ,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx","shared/services/movies-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__pCzae\",\"author\":\"Reviews_author__Y70Lx\",\"content\":\"Reviews_content__79P1X\"};","import {useState, useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RevolvingDot } from 'react-loader-spinner';\nimport { getReviewsByMovieId } from '../../shared/services/movies-api';\n\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const {id} = useParams();\n\n    useEffect(()=> {\n        const fetchReviews = async() => {\n            setLoading(true);\n            try {\n                const { results } = await getReviewsByMovieId(id);\n                setReviews([...results]);\n            }\n            catch(error) {\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchReviews();\n    }, [id]);\n\n\n    const elements = reviews.map(({id, author, content}) => (\n        <li className={styles.reviews} key={id}>\n            <p className={styles.author}>\n            Author: <b>{author}</b>\n            </p>\n            <p className={styles.content}>{content}</p>\n        </li>));\n\n    return (\n        <>\n            {loading && (\n                <RevolvingDot />\n            )}\n            {error && <p>Something goes wrong. Please try again.</p>}\n            {reviews && reviews.length > 0 ? (\n                <ul className={styles.list}>\n                    {elements}\n                </ul>\n            ) : (\n                <span>We don't have reviews for this movie.</span>\n            )}\n        </>\n        \n    );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: '682f4219ed4d8b2eaabdbacd40ee2053',\n        language: 'en-US',\n    },\n});\n\nexport const getPopularMovies = async()=> {\n    const url = '/trending/movie/day';\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getSearchMovies = async(query, page )=> {\n    const url = '/search/movie';\n    const {data} = await instance.get(url, {\n        params: {query, page },\n    });\n    return data;\n}\n\nexport const getMovieById = async(movie_id)=> {\n    const url = `/movie/${movie_id}`;\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getCastByMovieId  = async(movie_id)=> {\n    const url = `/movie/${movie_id}/credits`;\n    const {data} = await instance.get(url);\n    return data;\n}\n\nexport const getReviewsByMovieId  = async(movie_id)=> {\n    const url = `/movie/${movie_id}/reviews`;\n    const {data} = await instance.get(url);\n    return data;\n}"],"names":["useState","reviews","setReviews","loading","setLoading","error","setError","id","useParams","useEffect","fetchReviews","getReviewsByMovieId","results","message","elements","map","author","content","className","styles","length","instance","axios","baseURL","params","api_key","language","getPopularMovies","get","data","getSearchMovies","query","page","getMovieById","movie_id","url","getCastByMovieId"],"sourceRoot":""}